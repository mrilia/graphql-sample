// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Simple.GraphQL.Backend.Models.Context;

#nullable disable

namespace Simple.GraphQL.Backend.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20230522122315_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Simple.GraphQL.Backend.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5605377-580d-485c-8376-f1f2f5757127"),
                            Description = "An account For savings",
                            OwnerId = new Guid("a402fe7c-b959-49f4-b10a-58540da2bde5"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("e8306da0-dfb4-48fe-b40e-b080fbeada55"),
                            Description = "An account for incoms",
                            OwnerId = new Guid("a402fe7c-b959-49f4-b10a-58540da2bde5"),
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("69a7a04a-3b21-4001-a77f-593794224f99"),
                            Description = "",
                            OwnerId = new Guid("9a82dafa-1648-4ac6-904c-47a5dffc9db4"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("e546cee7-0e68-44ec-b01c-95cf5ffd08b6"),
                            Description = "",
                            OwnerId = new Guid("9a82dafa-1648-4ac6-904c-47a5dffc9db4"),
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("6ffc52bd-8a1c-4471-a169-544f9b16ed61"),
                            Description = "",
                            OwnerId = new Guid("9a82dafa-1648-4ac6-904c-47a5dffc9db4"),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("94a451c6-cc53-481a-b59e-a91a451dc5c2"),
                            Description = "",
                            OwnerId = new Guid("9a82dafa-1648-4ac6-904c-47a5dffc9db4"),
                            Type = 2
                        });
                });

            modelBuilder.Entity("Simple.GraphQL.Backend.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a402fe7c-b959-49f4-b10a-58540da2bde5"),
                            Address = "Washington DC",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("9a82dafa-1648-4ac6-904c-47a5dffc9db4"),
                            Address = "Texas",
                            Name = "Alex Green"
                        });
                });

            modelBuilder.Entity("Simple.GraphQL.Backend.Models.Account", b =>
                {
                    b.HasOne("Simple.GraphQL.Backend.Models.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Simple.GraphQL.Backend.Models.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
